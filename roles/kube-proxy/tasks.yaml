- name:  Copy kube-proxy csr file
  copy:
    src=templates/kube-proxy-csr.json.template
    dest={{ local_template_dir }}/kube-proxy-csr.json
  connection=local

- name: Generate kube-proxy certificate and key file
  shell:
    cd {{ local_template_dir }}/ && cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=kubernetes  kube-proxy-csr.json | cfssljson -bare kube-proxy
  connection=local

- name: Configure k8s cluster parameter
  shell:
    cd {{ local_template_dir }} && {{ local_package_dir }}/kubectl/kubectl config set-cluster kubernetes --certificate-authority=ca.pem --embed-certs=true --server={{ kube_apiserver }} --kubeconfig=kube-proxy.kubeconfig
  connection=local

- name: Configure k8s client certificate parameter
  shell:
    cd {{ local_template_dir }} && {{ local_package_dir }}/kubectl/kubectl config set-credentials kube-proxy --client-certificate=kube-proxy.pem --client-key=kube-proxy-key.pem --embed-certs=true --kubeconfig=kube-proxy.kubeconfig
  connection=local

- name: Configure context parameter
  shell:
    cd {{ local_template_dir }} && {{ local_package_dir }}/kubectl/kubectl config set-context default --cluster=kubernetes --user=kube-proxy --kubeconfig=kube-proxy.kubeconfig
  connection=local

- name: Configure use-context
  shell:
    cd {{ local_template_dir }} && {{ local_package_dir }}/kubectl/kubectl config use-context default --kubeconfig=kube-proxy.kubeconfig
  connection=local

- name: Distribute kube-proxy file to user: k8s
  copy:
    src={{ local_template_dir }}/kube-proxy.kubeconfig
    dest={{ kubernetes_conf_dir }}/kube-proxy.kubeconfig
    owner={{ k8s_user }}

- name: Distribute kube-proxy config file
  copy:
    src=templates/kube-proxy.config.yaml.template
    dest={{ kubernetes_conf_dir }}/kube-proxy.config.yaml

- name: Distribute kube-proxy service file
  copy:
    src=templates/kube-proxy.service.template
    dest=/etc/systemd/system/kube-proxy.service

- name: Start kube-proxy service
  service:
    name=kube-proxy
    state:started
    enabled=yes