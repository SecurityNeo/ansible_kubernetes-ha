- name: Copy kube-controller-manager csr file
  template:
    src=templates/kube-controller-manager.json.j2
    dest={{ local_template_dir }}/kube-controller-manager.json
  connection: local
  ignore_errors: yes

- name: Generate kube-controller-manager certificate and key file
  shell:
    cd {{ local_template_dir }}/ && cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=kubernetes kube-controller-manager-csr.json | cfssljson -bare kube-controller-manager
  connection: local
  ignore_errors: yes

- name:  Distribute kube-controller-manager certificate files
  copy:
    src={{ local_template_dir }}/kube-controller-manager.pem
    dest={{ kubernetes_cert_dir }}/
    owner={{ k8s_user }}

- name: Distribute kube-controller-manager certificate files
  copy:
    src={{ local_template_dir }}/kube-controller-manager-key.pem
    dest={{ kubernetes_cert_dir }}/
    owner={{ k8s_user }}

- name: Configure k8s cluster parameter
  shell:
    cd {{ local_template_dir }} && {{ local_package_dir }}/kubectl/kubernetes/client/bin/kubectl config set-cluster kubernetes --certificate-authority=ca.pem --embed-certs=true --server={{ kube_apiserver }} --kubeconfig=kube-controller-manager.kubeconfig
  connection: local
  ignore_errors: yes

- name: Configure k8s client certificate parameter
  shell:
    cd {{ local_template_dir }} && {{ local_package_dir }}/kubectl/kubernetes/client/bin/kubectl config set-credentials system:kube-controller-manager --client-certificate=kube-controller-manager.pem --client-key=kube-controller-manager-key.pem --embed-certs=true --kubeconfig=kube-controller-manager.kubeconfig
  connection: local
  ignore_errors: yes

- name: Configure context parameter
  shell:
    cd {{ local_template_dir }} && {{ local_package_dir }}/kubectl/kubernetes/client/bin/kubectl config set-context system:kube-controller-manager --cluster=kubernetes --user=system:kube-controller-manager --kubeconfig=kube-controller-manager.kubeconfig
  connection: local
  ignore_errors: yes

- name: Configure use-context
  shell:
    cd {{ local_template_dir }} && {{ local_package_dir }}/kubectl/kubernetes/client/bin/kubectl config use-context system:kube-controller-manager --kubeconfig=kube-controller-manager.kubeconfig
  connection: local
  ignore_errors: yes

- name: Distribute kube-controller-manager.kubeconfig file to user
  copy:
    src={{ local_template_dir }}/kube-controller-manager.kubeconfig
    dest={{ kubernetes_conf_dir }}/
    owner={{ k8s_user }}

- name: Distribute kube-controller-manager service file
  copy:
    src=templates/kube-controller-manager.service.template
    dest=/etc/systemd/system/kube-controller-manager.service

- name: Start kube-controller-manager service
  service:
    name=kube-controller-manager
    state=started
    enabled=yes